# Opentelemetry
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"  # OTLP gRPC 데이터를 수신
    processors:
    extensions:
    exporters:
      jaeger:
        endpoint: "jaeger.observability.svc.cluster.local:14250"  # Jaeger로 trace 데이터 전송
        insecure: true
      logging:
        logLevel: debug  # 로그로 trace 데이터 출력

    service:
      pipelines:
        traces:
          receivers: [otlp]  # OTLP 데이터를 수신
          processors: [] 
          exporters: [jaeger, logging]  # Jaeger와 logging으로 전송
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
    - name: otlp
      port: 4317
      protocol: TCP
      targetPort: 4317
  selector:
    app: opentelemetry
    component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  replicas: 1
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector:0.6.0
          args:
            - "--config=/conf/otel-collector-config.yaml"
          ports:
            - containerPort: 4317  # OTLP gRPC 수신 포트
          volumeMounts:
            - name: otel-collector-config-vol
              mountPath: /conf
      volumes:
        - name: otel-collector-config-vol
          configMap:
            name: otel-collector-conf
---
# Jaeger
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one:1.60
          ports:
            - containerPort: 14250  # Jaeger Collector gRPC 포트
            - containerPort: 16686  # Jaeger Query UI 포트
          args:
            - "--collector.grpc-server.host-port=:14250" # Enable gRPC for OpenTelemetry traces
            - "--query.base-path=/"
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
spec:
  ports:
    - port: 16686
      targetPort: 16686
      name: ui
    - port: 14250
      targetPort: 14250
      name: grpc # Traces gRPC
  selector:
    app: jaeger